<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Internet Shakespeare Editions: pilot TEI schema</title>
         </titleStmt>
         <publicationStmt>
            <p>Published by the ISE and the HCMC, no restrictions on use.</p>
         </publicationStmt>
         <sourceDesc>
            <p>Born-digital document</p>
         </sourceDesc>
      </fileDesc>
  </teiHeader>
  <text>
      <body>
         <schemaSpec ident="ise_all" start="TEI">
            <moduleRef key="header"
                       include="authority availability calendar calendarDesc catDesc catRef category change classDecl correction distributor edition editionStmt editorialDecl encodingDesc fileDesc funder hyphenation idno licence listPrefixDef normalization notesStmt prefixDef principal profileDesc projectDesc publicationStmt punctuation rendition revisionDesc sourceDesc sponsor styleDefDecl taxonomy teiHeader titleStmt"/>
            <moduleRef key="core"
                       include="abbr author biblScope choice cit corr date desc editor email expan foreign head imprint l label lg name note orig p ptr pubPlace publisher reg relatedItem resp respStmt sp speaker stage title unclear"/>
            <moduleRef key="tei"/>
            <moduleRef key="textstructure"
                       include="TEI back body closer div docAuthor docDate docEdition docImprint docTitle epigraph front imprimatur opener text titlePage titlePart trailer"/>
            <moduleRef key="drama" include="spGrp"/>
            <moduleRef key="transcr" include="am ex space subst supplied"/>
        
            <moduleRef key="figures" include="figure"/>
            <moduleRef key="corpus" include="particDesc"/>
        
            <!--     We presumably need <ab> for speeches which are not definitively prose or verse, a distinction the ISE makes.   -->
            <moduleRef key="linking" include="ab"/>

            <moduleRef key="gaiji" include="char charDecl charName glyph glyphName mapping"/>
        
            <moduleRef key="namesdates"
                       include="addName affiliation age faith forename genName listPerson nameLink nationality occupation persName person roleName socecStatus state surname trait"/>

        

            <elementSpec ident="div" module="core" mode="change">
               <attList>
                  <attDef ident="type" mode="change">
                     <valList type="semi" mode="replace">
<!--     NOTE: We exclude prologue and epilogue elements from the drama module because they are not in Simple,
                so we use @type on <div> instead. -->
                        <valItem ident="act">
                           <gloss>Act in a drama</gloss>
                        </valItem>
                        <valItem ident="epilogue">
                           <gloss>Epilogue in a drama</gloss>
                        </valItem>
                        <valItem ident="prologue">
                           <gloss>Prologue in a drama</gloss>
                        </valItem>
                        <valItem ident="scene">
                           <gloss>Scene in a drama</gloss>
                        </valItem>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
        
            <!--        MDH: The following material is adapted from the TEI Simple ODD file, and should be updated 
                  when changes are made to Simple. exactMatch processing instructions have been removed;
                  I don't see what they're for, other than allowing latitude it would be better to preclude. -->
            <classSpec type="atts" ident="att.global" mode="change">
               <constraintSpec ident="corresppointer" scheme="isoschematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:*[@corresp]">
                        <let name="results"
                             value="for $t in tokenize(normalize-space(@corresp),'\s+') return starts-with($t,'#') and not(id(substring($t,2)))"/>
                        <report test="some $x in $results  satisfies $x"> Error: Every
                  local pointer in "<value-of select="@corresp"/>" must point to
                  an ID in this document (<value-of select="$results"/>)</report>
                     </rule>
                  </constraint>
               </constraintSpec>
            </classSpec>
        
            <classRef key="att.global.analytic"/>
            <classRef key="att.global.facs"/>
            <classRef key="att.milestoneUnit"/>
            <classRef key="att.global.linking"/>
            <classRef key="att.global.rendition"/>
            <classSpec type="atts" ident="att.datcat" mode="delete"/>
            <classSpec type="atts" ident="att.declarable" mode="delete"/>
            <classSpec type="atts" ident="att.divLike" mode="change">
               <attList>
                  <attDef ident="org" mode="delete"/>
                  <attDef ident="sample" mode="delete"/>
               </attList>
            </classSpec>
        
            <classSpec module="tei"
                       type="atts"
                       ident="att.global.linking"
                       mode="change">
               <attList>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
               </attList>
            </classSpec>
        
            <classSpec module="tei"
                       ident="att.global.rendition"
                       type="atts"
                       mode="change">
               <attList>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="rendition" mode="change">
                     <constraintSpec ident="renditionpointer" scheme="isoschematron">
                        <constraint>
                           <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:*[@rendition]">
                              <let name="results"
                                   value="for $val in tokenize(normalize-space(@rendition),'\s+') return        starts-with($val,'simple:')        or        (starts-with($val,'#') and //tei:rendition[@xml:id=substring($val,2)])"/>
                              <assert test="every $x in $results satisfies $x"> Error: Each of
                      the rendition values in "<value-of select="@rendition"/>"
                      must point to a local ID or to a token in the Simple scheme
                      (<value-of select="$results"/>)</assert>
                           </rule>
                        </constraint>
                     </constraintSpec>
                     <valList type="semi" mode="replace">
                        <valItem ident="simple:allcaps">
                           <desc>all capitals</desc>
                        </valItem>
                        <valItem ident="simple:blackletter">
                           <desc>black letter or gothic typeface</desc>
                        </valItem>
                        <valItem ident="simple:bold">
                           <desc>bold typeface</desc>
                        </valItem>
                        <valItem ident="simple:bottombraced">
                           <desc>marked with a brace under the bottom of the text</desc>
                        </valItem>
                        <valItem ident="simple:boxed">
                           <desc>border around the text</desc>
                        </valItem>
                        <valItem ident="simple:centre">
                           <desc>centred</desc>
                        </valItem>
                        <valItem ident="simple:cursive">
                           <desc>cursive typeface</desc>
                        </valItem>
                        <valItem ident="simple:display">
                           <desc>block display</desc>
                        </valItem>
                        <valItem ident="simple:doublestrikethrough">
                           <desc>strikethrough with double line</desc>
                        </valItem>
                        <valItem ident="simple:doubleunderline">
                           <desc>underlined with double line</desc>
                        </valItem>
                        <valItem ident="simple:dropcap">
                           <desc>initial letter larger or decorated</desc>
                        </valItem>
                        <valItem ident="simple:float">
                           <desc>floated out of main flow</desc>
                        </valItem>
                        <valItem ident="simple:hyphen">
                           <desc>with a hyphen here (eg in line break)</desc>
                        </valItem>
                        <valItem ident="simple:inline">
                           <desc>inline rendering</desc>
                        </valItem>
                        <valItem ident="simple:italic">
                           <desc>italic typeface</desc>
                        </valItem>
                        <valItem ident="simple:justify">
                           <desc>justified</desc>
                        </valItem>
                        <valItem ident="simple:larger">
                           <desc>larger type</desc>
                        </valItem>
                        <valItem ident="simple:left">
                           <desc>aligned to the left or left-justified</desc>
                        </valItem>
                        <valItem ident="simple:leftbraced">
                           <desc>marked with a brace on the left side of the text</desc>
                        </valItem>
                        <valItem ident="simple:letterspace">
                           <desc>letter-spaced</desc>
                        </valItem>
                        <valItem ident="simple:normalstyle">
                           <desc>upright shape and default weight of typeface</desc>
                        </valItem>
                        <valItem ident="simple:normalweight">
                           <desc>normal typeface weight</desc>
                        </valItem>
                        <valItem ident="simple:right">
                           <desc>aligned to the right or right-justified</desc>
                        </valItem>
                        <valItem ident="simple:rightbraced">
                           <desc>marked with a brace to the right of the text</desc>
                        </valItem>
                        <valItem ident="simple:rotateleft">
                           <desc>rotated to the left</desc>
                        </valItem>
                        <valItem ident="simple:rotateright">
                           <desc>rotated to the right</desc>
                        </valItem>
                        <valItem ident="simple:smallcaps">
                           <desc>small caps</desc>
                        </valItem>
                        <valItem ident="simple:smaller">
                           <desc>smaller type</desc>
                        </valItem>
                        <valItem ident="simple:strikethrough">
                           <desc>strike through</desc>
                        </valItem>
                        <valItem ident="simple:subscript">
                           <desc>subscript</desc>
                        </valItem>
                        <valItem ident="simple:superscript">
                           <desc>superscript</desc>
                        </valItem>
                        <valItem ident="simple:topbraced">
                           <desc>marked with a brace above the text</desc>
                        </valItem>
                        <valItem ident="simple:typewriter">
                           <desc>fixed-width typeface, like typewriter</desc>
                        </valItem>
                        <valItem ident="simple:underline">
                           <desc>underlined with single line</desc>
                        </valItem>
                        <valItem ident="simple:wavyunderline">
                           <desc>underlined with wavy line</desc>
                        </valItem>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
        
        
        
            <elementSpec ident="TEI" module="textstructure" mode="change">
               <attList>
                  <attDef ident="rend" mode="replace">
                     <valList type="closed">
                        <valItem ident="ise:basic">
                           <gloss>Conforms to the basic ISE schema (text structure)</gloss>
                        </valItem>
                        <valItem ident="ise:intermediate">
                           <gloss>Conforms to structural and textual feature components of the ISE schema</gloss>
                        </valItem>
                        <valItem ident="ise:full">
                           <gloss>Conforms to the full ISE schema</gloss>
                        </valItem>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
        
        
        
            <elementSpec ident="figure" module="figures" mode="change">
               <attList>
                  <attDef ident="type" mode="change" usage="req">
                     <valList type="closed" mode="replace">
                        <valItem ident="ornament">
                           <gloss>An ornamental figure on the page.</gloss>
                        </valItem>
                        <valItem ident="rule">
                           <gloss>A horizontal rule or line.</gloss>
                        </valItem>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
        
            <elementSpec ident="stage" module="core" mode="change">
               <attList>
                  <attDef ident="type" usage="req" mode="change">
                     <valList type="closed" mode="replace">
                <!--action, delivery, entrance, exit, location, optional, other, setting, sound, uncertain, whoto -->
                        <valItem ident="action">
                           <gloss>action</gloss>
                        </valItem>
                        <valItem ident="delivery">
                           <gloss>delivery</gloss>
                        </valItem>
                        <valItem ident="entrance">
                           <gloss>entrance</gloss>
                        </valItem>
                        <valItem ident="exit">
                           <gloss>exit</gloss>
                        </valItem>
                        <valItem ident="location">
                           <gloss>location</gloss>
                        </valItem>
                        <valItem ident="optional">
                           <gloss>optional</gloss>
                        </valItem>
                        <valItem ident="other">
                           <gloss>other</gloss>
                        </valItem>
                        <valItem ident="setting">
                           <gloss>setting</gloss>
                        </valItem>
                        <valItem ident="sound">
                           <gloss>sound</gloss>
                        </valItem>
                        <valItem ident="uncertain">
                           <gloss>uncertain</gloss>
                        </valItem>
                        <valItem ident="whoto">
                           <gloss>whoto</gloss>
                        </valItem>
                     </valList>
                  </attDef>
               </attList>
            </elementSpec>
        
            <!--     This stuff comes direct from TEI Simple.   -->
        
        
            <!--    We add a Schematron constraint to @who to make sure its values point to 
        existing <person> elements. -->
            <classSpec type="atts" ident="att.ascribed" module="tei" mode="change">
               <attList>
                  <attDef ident="who" mode="change">
                     <constraintSpec scheme="isoschematron" ident="deprecated">
                        <constraint>
                           <sch:rule xmlns:sch="http://purl.oclc.org/dsdl/schematron" context="tei:*[@who]">
                              <sch:let name="bools"
                                       value="for $i in tokenize(@who, '\s+') return count(//tei:person[@xml:id=substring-after($i, '#')]) gt 0"/>
                              <sch:assert test="every $i in $bools satisfies $i=true()">
                      The @who attribute must point to one or more person elements in the particDesc.
                    </sch:assert>
                           </sch:rule>
                        </constraint>
                     </constraintSpec>
                  </attDef>
               </attList>
          
            </classSpec>
        
         </schemaSpec>
      </body>
  </text>
</TEI>
